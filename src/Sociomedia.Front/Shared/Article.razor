@using Sociomedia.Front.Data

<div class="card article">
    <a class="image" href="@Value.Url" target="_blank">
        <img class="card-img-top" src="@Value.ImageUrl">
        <div class="summary">
            <span class="summary-text">
                @Value.Summary
            </span>
        </div>
        <span class="publish-date badge badge-pill badge-warning" data-toggle="tooltip" data-placement="right" title="@Value.PublishDate.ToString("F")">
            @GetElapsedTimeFromDate(Value.PublishDate)
        </span>
    </a>
    <div class="card-body">
        <a href="@Value.Url" target="_blank">
            <h5 class="card-title title" data-toggle="tooltip" data-placement="right" title="@Value.Title">
                @Value.Title
            </h5>
        </a>
        <div class="d-flex justify-content-between align-items-center">
            <div class="btn-group">
                <a class="btn btn-sm btn-outline-secondary" href="@Value.Url" target="_blank">
                    Lire
                </a>
            </div>
            <a href="@("/medias/" + Value.MediaId)">
                <img class="logo" src="@Value.MediaImageUrl"/>
            </a>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public ArticleListItem Value { get; set; }

    private string GetElapsedTimeFromDate(DateTimeOffset value)
    {
        var result = DateTimeOffset.Now.Subtract(value);
        if (result.TotalSeconds < 60) {
            return $"Il y a {(int)result.TotalSeconds} secondes";
        }
        if (result.TotalSeconds < 120) {
            return "Il y a 1 minute";
        }
        if (result.TotalMinutes < 60) {
            return $"Il y a {(int)result.TotalMinutes} minutes";
        }
        if (result.TotalHours < 2) {
            return "Il y a 1 heure";
        }
        if (result.TotalHours < 24) {
            return $"Il y a {(int)result.TotalHours} heures";
        }
        if (result.TotalDays < 2) {
            return "Il y a 1 jour";
        }
        return $"Il y a {(int)result.TotalDays} jours";
    }

}